package pt.tecnico.filesystem.domain;

class MyDrive;

class FileSystem;

class Manager;

class Entity {
	String _name;
	String _owner;
	String _id;
	Boolean _read;
	Boolean _write;
	Boolean _delete;
	Boolean _execute;
}


class Directory;

class User {
	String _name;
	String _userName;
	String _password;
	String _mask;
}

class SuperUser extends User {}

class Link extends Entity {
	String _path;
}

class App extends Entity {
	String _method;
}

class File extends Entity;

relation DomainRootHasMyDriveApplication {
  .pt.ist.fenixframework.DomainRoot playsRole root {
    multiplicity 0..1;
  }
  MyDrive playsRole mydrive {
    multiplicity 0..1;
  }
}


relation ManagerhasFileSystem {

	Manager playsRole manager {

		multiplicity *;
	}

	FileSystem playsRole system {
		multiplicity *;
	}

}

relation FileSystemhasUser {

	FileSystem playsRole system {
		multiplicity 1;
	} 
	User playsRole user {
		multiplicity *;
	}
}


relation FileSystemhasDirectory{
	FileSystem playsRole filesystem {
		multiplicity 1..1;
	}
	
	Directory playsRole directory {
		multiplicity 1..*;
	}
}

relation DirectoryhasDirectory{

	Directory playsRole parent {

		multiplicity 1;

	}

	Directory playsRole children{

		multiplicity 1..*;

	}

}



relation DirectoryHasFile{

	Directory playsRole directory { 

		multiplicity 1; 

	}

	File playsRole file	{ 

		multiplicity 0..*; 

	}

}


relation DirectoryhasLink{

	Directory playsRole directory{

		multiplicity 1;

	}

	Link playsRole link{

		multiplicity *;

	}

}



relation DirectoryhasApp{

	Directory playsRole directory{

		multiplicity 1;

	}

	App playsRole app{

		multiplicity *;

	}

}


relation UserhasDirectory {

	User playsRole user {

		multiplicity 1;

	} 

	Directory playsRole directory {

		multiplicity *;

	}

} 







